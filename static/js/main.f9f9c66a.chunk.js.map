{"version":3,"sources":["buttonStorage.js","businesslogic/CalculationEngine.js","businesslogic/TapeEngine.js","App.js","reportWebVitals.js","index.js"],"names":["buttonStorage","buttons","value","type","color","CalculationEngine","expression","this","array","reorganized","k","length","push","pointer","sign","reorganizeArray","mergeMinusesForOp","op","t1","t2","v1","v2","Math","pow","parseFloat","NaN","string","indexOf","cArray","match","i","console","log","mergeMinuses","doTheMath","str","result","replace","subCalc","subCalculations","calculate","calculated","calculateFull","TapeEngine","item","outputValue","outputClassName","curFocus","output","classList","split","focus","index","splice","tapeOperation","tapeSymbol","tapeSign","curValue","text","newValue","includes","remove","engine","isNaN","document","body","toggle","App","state","out","refOutput","React","createRef","refButtons","Array","from","current","querySelectorAll","forEach","e","style","height","offsetWidth","event","key","onButtonClick","tapeEngine","className","tape","add","blur","ref","onKeyPress","defaultValue","id","placeholder","map","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9f9c66a.chunk.js","sourcesContent":["let buttonStorage = {\r\n    buttons: [\r\n        {value: 'C', type: 'operation', color: 'bright'}, \r\n        {value: '(', type: 'symbol', color: 'bright'},\r\n        {value: ')', type: 'symbol', color: 'bright'},\r\n        {value: '/', type: 'sign', color: 'bright'},\r\n        {value: '7', type: 'symbol', color: 'default'}, \r\n        {value: '8', type: 'symbol', color: 'default'}, \r\n        {value: '9', type: 'symbol', color: 'default'}, \r\n        {value: '*', type: 'sign', color: 'bright'},\r\n        {value: '4', type: 'symbol', color: 'default'}, \r\n        {value: '5', type: 'symbol', color: 'default'}, \r\n        {value: '6', type: 'symbol', color: 'default'},\r\n        {value: '-', type: 'sign', color: 'bright'},\r\n        {value: '1', type: 'symbol', color: 'default'}, \r\n        {value: '2', type: 'symbol', color: 'default'}, \r\n        {value: '3', type: 'symbol', color: 'default'}, \r\n        {value: '+', type: 'sign', color: 'bright'},  \r\n        {value: '^', type: 'sign', color: 'bright'}, \r\n        {value: '0', type: 'symbol', color: 'default'},\r\n        {value: '.', type: 'symbol', color: 'default'},\r\n        {value: '=', type: 'operation', color: 'default'}\r\n    ]\r\n}\r\n\r\nexport default buttonStorage;","class CalculationEngine {\r\n\r\n  constructor(expression) {\r\n    this.expression = expression;\r\n  }\r\n\r\n  reorganizeArray(array) {\r\n    let reorganized = [];\r\n    let k = -1;\r\n    \r\n    while (++k < array.length) {\r\n      if (array[k] !== false) {\r\n        reorganized.push(array[k]);\r\n      }\r\n    }\r\n\r\n    return reorganized;\r\n  }\r\n\r\n  mergeMinusesForOp(array, pointer) {\r\n    let sign = 0;\r\n\r\n    while (array[pointer] === '-') {\r\n      array[pointer] = false;\r\n      pointer++;\r\n      sign++;\r\n    }\r\n\r\n    if (sign % 2 !== 0) {\r\n      array[pointer] *= -1; \r\n    }\r\n\r\n    return this.reorganizeArray(array);\r\n  }\r\n\r\n  mergeMinuses(array) {\r\n    let pointer = 0;\r\n    array = this.mergeMinusesForOp(array, pointer);\r\n\r\n    pointer += 2;\r\n    array = this.mergeMinusesForOp(array, pointer);\r\n\r\n    return this.reorganizeArray(array);\r\n  }\r\n  \r\n  doTheMath(op, array) {\r\n    let t1 = op - 1;\r\n    let t2 = op + 1;\r\n\r\n    let v1 = array[t1];\r\n    let v2 = array[t2];\r\n\r\n    switch (array[op]) {\r\n      case '^':\r\n        array[t2] = Math.pow(parseFloat(v1), parseFloat(v2));\r\n        break;\r\n      case '*':\r\n        array[t2] = parseFloat(v1) * parseFloat(v2);\r\n        break;\r\n      case '/':\r\n        if (parseFloat(v2) === 0) {\r\n          return NaN;\r\n        }\r\n        array[t2] = parseFloat(v1) / parseFloat(v2);\r\n        break;\r\n      case '+':\r\n        array[t2] = parseFloat(v1) + parseFloat(v2);\r\n        break;\r\n      case '-':\r\n        array[t2] = parseFloat(v1) - parseFloat(v2);\r\n        break;\r\n      default: \r\n        return NaN;  \r\n    }\r\n\r\n    array[op] = false;\r\n    array[t1] = false;\r\n  \r\n    return this.reorganizeArray(array);\r\n  }\r\n  \r\n  calculate(string){\r\n\r\n    if (string.indexOf('(') >= 0 || string.indexOf(')') >= 0) {\r\n      return NaN;\r\n    }\r\n    \r\n    // break the string into numbers and operators\r\n    let cArray = (string.match(/([0-9]+\\.[0-9]+)|([0-9]+)|\\+|-|\\^|\\*|\\//g));\r\n    let i = -1;\r\n\r\n    console.log(cArray);\r\n    \r\n    if (!cArray) {\r\n      return string;\r\n    }\r\n\r\n    if (cArray.length === 0) {\r\n      return string;\r\n    }\r\n\r\n    if (cArray.length === 1) {\r\n      return cArray[0];\r\n    }\r\n\r\n    cArray = this.mergeMinuses(cArray);\r\n\r\n    // degree\r\n    while (i++ < cArray.length - 1) {\r\n      if (cArray[i] === '^') {\r\n        cArray = this.doTheMath(i, cArray);\r\n        i = i - 1;\r\n      }\r\n    }\r\n    \r\n    // multiplications\r\n    i = -1;\r\n    while (i++ < cArray.length - 1) {\r\n      if (cArray[i] === '*') {\r\n        cArray = this.doTheMath(i, cArray);\r\n        i = i - 1;\r\n      }\r\n    }\r\n  \r\n    // divisions\r\n    i = -1;\r\n    while (i++ < cArray.length - 1) {\r\n      if (cArray[i] === '/') {\r\n        cArray = this.doTheMath(i, cArray);\r\n        i--;\r\n      }\r\n    }\r\n      \r\n    // sum/substract\r\n    i = -1;\r\n    while (i++ < cArray.length - 1) {\r\n      if (cArray[i] === '+') {\r\n        cArray = this.doTheMath(i, cArray);\r\n        i--;\r\n      }\r\n  \r\n      if (cArray[i] === '-') {\r\n        cArray = this.doTheMath(i, cArray);\r\n        i--;\r\n      }\r\n    }\r\n    return cArray[0];\r\n  }\r\n  \r\n  calculateFull(str) {\r\n    // clean the string from spaces\r\n    str = str.replace(/ /g,'');\r\n  \r\n    // declare the final result variable\r\n    let result = str;\r\n\r\n    //prevent 8(9) from being solved as 89\r\n    if (str.match(/[0-9]\\(/gmi) !== null || str.match(/\\)[0-9]/gmi)) {\r\n      return NaN;\r\n    }\r\n\r\n    // brake the strings there are between parentheses\r\n    let subCalculations = str.match(/\\(([^()]+)\\)/gmi);\r\n    let subCalc;\r\n  \r\n    if (!subCalculations) {\r\n      return this.calculate(str);\r\n    }\r\n  \r\n    for (let k = 0; k < subCalculations.length; k++) {\r\n      \r\n      subCalc = subCalculations[k].replace(/\\(|\\)/g, '');\r\n      let calculated = this.calculate(subCalc);\r\n      console.log('Replacing (' + subCalc + ') by ' + calculated);\r\n      result = result.replace('('+subCalc+')', calculated);\r\n    }\r\n  \r\n    // verify if the string still have parentheses and recursively resolves them\r\n    if (result.indexOf('(') >= 0 && result.indexOf(')') > result.indexOf('(')) {\r\n      return this.calculateFull(result);\r\n    } else if (result.indexOf('(') >= 0 || result.indexOf(')') >= 0) {\r\n      return NaN;\r\n    }\r\n  \r\n    console.log(\"String after subcalculations are done: \" + result);\r\n    return this.calculate(result);\r\n  }\r\n}\r\n\r\nexport default CalculationEngine;","import CalculationEngine from './CalculationEngine';\r\n\r\nclass TapeEngine {\r\n\r\n    constructor(item, outputValue, outputClassName, curFocus) {\r\n        this.item = item;\r\n        this.output = {\r\n            value: outputValue,\r\n            classList: outputClassName.split(' '),\r\n            focus: true\r\n        }\r\n    }\r\n\r\n    remove(array, item) {\r\n        const index = array.indexOf(item);\r\n\r\n        if (index > -1) {\r\n            array.splice(index, 1);\r\n        }\r\n        \r\n        return array;\r\n    }\r\n\r\n    tape() {\r\n        let type = this.item.type;\r\n    \r\n        switch (type) {\r\n            case 'operation':\r\n                this.tapeOperation(this.item.value);\r\n                break;\r\n            case 'symbol':\r\n                this.tapeSymbol(this.item.value);\r\n                break;\r\n            case 'sign':\r\n                this.tapeSign(this.item.value);\r\n                break;\r\n            default:\r\n                break;  \r\n        }\r\n    }\r\n    \r\n    tapeSign(value) {\r\n        let curValue = value;\r\n        let text = this.output.value;\r\n        let newValue = this.output.value;\r\n    \r\n        if (text !== 'ERROR' && !this.output.classList.includes('result')) {\r\n            if (text === '0' && value === '-') {\r\n                newValue = curValue;\r\n            } else {\r\n                newValue = text + curValue;\r\n            }\r\n        } else if (text !== 'ERROR') {\r\n            newValue = text + curValue;\r\n            this.output.classList = this.remove(this.output.classList, 'result');\r\n        } else {\r\n            newValue = curValue;\r\n            this.output.classList = this.remove(this.output.classList, 'result');\r\n            this.output.classList = this.remove(this.output.classList, 'blocked');\r\n        }\r\n    \r\n        this.output.value = newValue;\r\n    }\r\n    \r\n    tapeSymbol(value) {\r\n        let curValue = value;\r\n        let text = this.output.value;\r\n        let newValue = this.output.value;\r\n    \r\n        if (text !== 'ERROR' && !this.output.classList.includes('result')) {\r\n            if (value !== '.') {\r\n                newValue = (text === '0' ? '' : text) + curValue;\r\n            } else {\r\n                newValue = text + curValue;\r\n            }\r\n        } else {\r\n            newValue = curValue;\r\n            this.output.classList = this.remove(this.output.classList, 'result');\r\n            this.output.classList = this.remove(this.output.classList, 'blocked');\r\n        }\r\n    \r\n        this.output.value = newValue;\r\n      }\r\n    \r\n    tapeOperation(value) {\r\n        let curValue = value;\r\n        let text = this.output.value;\r\n        let newValue = this.output.value;\r\n    \r\n        if (curValue === 'C') {\r\n            newValue = '';\r\n            this.output.classList = this.remove(this.output.classList, 'result');\r\n            this.output.classList = this.remove(this.output.classList, 'blocked');\r\n        } else if (text !== 'ERROR' && curValue === '=') {\r\n            let engine = new CalculationEngine(text);\r\n            let result = engine.calculateFull(engine.expression);\r\n    \r\n            if (isNaN(parseFloat((result)))) {\r\n                newValue = 'ERROR';\r\n                this.output.classList.push('blocked');\r\n                this.output.focus = false;\r\n            } else {\r\n                newValue = result;\r\n                this.output.classList.push('result');\r\n            }\r\n        } else if (curValue === 'T') {\r\n            document.body.classList.toggle('dark');\r\n        } \r\n        this.output.value = newValue;\r\n    }\r\n}\r\n\r\nexport default TapeEngine;","import './App.css';\r\nimport React from 'react';\r\nimport buttonStorage from './buttonStorage';\r\nimport TapeEngine from './businesslogic/TapeEngine';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      out: '',\r\n    }\r\n\r\n    this.refOutput = React.createRef();\r\n    this.refButtons = React.createRef();\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const buttons = Array.from(this.refButtons.current.querySelectorAll('button'));\r\n    buttons.forEach(e => e.style.height = e.offsetWidth + 'px');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const buttons = Array.from(this.refButtons.current.querySelectorAll('button'));\r\n    buttons.forEach(e => e.style.height = e.offsetWidth + 'px');\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    let item = {value: '=', type: 'operation', color: 'default'};\r\n\r\n    if (event.key === 'Enter') {\r\n      this.onButtonClick(item);\r\n    }\r\n  }\r\n\r\n  onButtonClick(item) {\r\n    let output = this.refOutput.current;\r\n    let tapeEngine = new TapeEngine(item, output.value, output.className);\r\n    \r\n    tapeEngine.tape();\r\n    output.value = tapeEngine.output.value;\r\n    let classList = tapeEngine.output.classList;\r\n    output.classList = [];\r\n\r\n    for (let i = 0; i < classList.length; i++) {\r\n      output.classList.add(classList[i]);\r\n    }\r\n\r\n    if (output.focus) {\r\n      output.blur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <div className=\"calculator-result\">\r\n          <input ref={this.refOutput} onKeyPress={(e) => {this.onKeyPress(e)}} className=\"calculator-result-expression\" \r\n          defaultValue={this.state.out} id=\"input\" placeholder='0'\r\n          ></input>\r\n        </div>\r\n\r\n        <div ref={this.refButtons} className=\"calculator-buttons\">\r\n          {buttonStorage.buttons.map((item) => <button\r\n          key={item.value} className={item.type + ' ' + item.color} onClick={() => {this.onButtonClick(item)}}\r\n          >{item.value}</button>)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}